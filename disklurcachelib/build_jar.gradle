//dependsOn 可根据实际需要增加或更改
task buildJar(dependsOn: ['assembleRelease'], type: Jar) {

    baseName = "disk_lru_cache_lib"
//    appendix = "v"
    version = APP_VERSION_NAME as String
    classifier = "release"

    //后缀名
    extension = "jar"
    //最终的 Jar 包名，如果没设置，默认为 [baseName]-[appendix]-[version]-[classifier].[extension]
//    archiveName = "PingStartSDK.jar"

    //需打包的资源所在的路径集
    def srcClassDir = [project.buildDir.absolutePath + "/intermediates/classes/release"];
    //初始化资源路径集
    from srcClassDir

    //去除路径集下部分的资源
//    exclude "com/xxx/adsdk/BuildConfig.class"
//    exclude "com/xxx/adsdk/BuildConfig\$*.class"
//    exclude "com/xxx/adsdk/test/**/*.class"
    exclude "**/BuildConfig.class"
    exclude "**/BuildConfig\$*.class"
    exclude "**/R.class"
    exclude "**/R\$*.class"

    //只导入资源路径集下的部分资源
//    include "com/xxx/adsdk/**/*.class"

    //注: exclude include 支持可变长参数
    def savePath = project.projectDir.absolutePath + "\\lib_v" + version
    setDestinationDir(new File(savePath))
}

task buildProguardJar(dependsOn: ['assembleRelease'], type: Copy) {
    //需打包的资源所在的路径集
    def srcClassDir = project.buildDir.absolutePath + "/intermediates/bundles/release/classes.jar";
    //初始化资源路径集
    from srcClassDir
    def v = APP_VERSION_NAME as String
    def savePath = project.projectDir.absolutePath + "\\lib_v" + v
    into savePath
    rename {
        "disk_lru_cache_lib-v" + v + "-proguarded.jar"
    }
}